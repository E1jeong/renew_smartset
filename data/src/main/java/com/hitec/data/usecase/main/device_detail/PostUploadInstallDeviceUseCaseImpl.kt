package com.hitec.data.usecase.main.device_detail

import com.hitec.data.db.retrofit.HitecService
import com.hitec.data.db.retrofit.param.UploadInstallDeviceParam
import com.hitec.data.model.toDomainModel
import com.hitec.domain.model.UploadInstallDevice
import com.hitec.domain.usecase.main.device_detail.PostUploadInstallDeviceUseCase
import javax.inject.Inject

class PostUploadInstallDeviceUseCaseImpl @Inject constructor(
    private val hitecService: HitecService
) : PostUploadInstallDeviceUseCase {
    override suspend fun invoke(
        userId: String,
        password: String,
        mobileId: String,
        bluetoothId: String,
        localSite: String,

        //param
        modTypeCd: String,
        meterDeviceId: String,
        deviceTypeCd: String,
        communicationTypeCd: String,
        telecomTypeCd: String,
        consumeHouseNo: String,
        consumeHouseNm: String,
        meterMethodCd: String,
        deviceModelCd: String,
        meterDeviceNm: String,
        meterDeviceSn: String,
        installGroupCd: String,
        companyCd: String,
        installCompanyNm: String,
        nbServiceCode: String,
        nbCseId: String,
        nbIccId: String,
        uploadResultCd: String,
        uploadErrorCd: String,
        barcode: String,
        cameraSave: String,
        setDt: String,
        AreaBig: String,
        AreaBigCd: String,
        AreaMid: String,
        AreaMidCd: String,
        AreaSmall: String,
        AreaSmallCd: String,
        setAreaAddr: String,
        setPlaceDesc: String,
        accountCheckNote: String,
        deviceMemo: String,
        cdmaNo: String,
        serverAddr1: String,
        serverPort1: String,
        pan: String,
        panNm: String,
        pnwk: String,
        nwk: String,
        mac: String,
        gpsLatitude: String,
        gpsLongitude: String,
        meterBaseTime: String,
        meterIntervalTime: String,
        reportIntervalTime: String,
        reportRangeTime: String,
        dataSkipFlag: String,
        meterStoreMonth: String,
        meterBaseDay: String,
        meterAlertTime: String,
        meterPeriodTime: String,
        activeStartDay: String,
        activeEndDay: String,
        activeStartHour: String,
        activeEndHour: String,
        terminalType: String,
        firmware: String,
        subUpdateInterval: String,
        subNwkID: String,
        terminalTypeCd: String,
        utilityCode: String,
        waterCompCode: String,
        wmuManufacturerCode: String,
        wmuInstallCode: String,
        cdmaTypeCd: String,
        firmwareGateway: String,
        serverConnectionCode: String,
        concenIP: String,
        concenGwIP: String,
        serverURL: String,
        rfChn: String,
        hcuId: String,
        setInitDate: String,
        masterSn: String,
        subSn1: String,
        subSn2: String,
        subSn3: String,
        subSn4: String,
        accountMeterUse1: String,
        accountMeterUse2: String,
        accountMeterUse3: String,
        meterCount: String,
        meterCd1: String,
        meterPort1: String,
        meterTypeCd1: String,
        meterCompany1: String,
        meterSn1: String,
        meterCurrVal1: String,
        meterCaliber1: String,
        metercaliberCd1: String,
        meterDigits1: String,
        meterCd2: String,
        meterPort2: String,
        meterTypeCd2: String,
        meterCompany2: String,
        meterSn2: String,
        meterCurrVal2: String,
        meterCaliber2: String,
        metercaliberCd2: String,
        meterDigits2: String,
        meterCd3: String,
        meterPort3: String,
        meterTypeCd3: String,
        meterCompany3: String,
        meterSn3: String,
        meterCurrVal3: String,
        meterCaliber3: String,
        metercaliberCd3: String,
        meterDigits3: String
    ): Result<UploadInstallDevice> = kotlin.runCatching {
        val param = UploadInstallDeviceParam(
            modTypeCd = modTypeCd,
            meterDeviceId = meterDeviceId,
            deviceTypeCd = deviceTypeCd,
            communicationTypeCd = communicationTypeCd,
            telecomTypeCd = telecomTypeCd,
            consumeHouseNo = consumeHouseNo,
            consumeHouseNm = consumeHouseNm,
            meterMethodCd = meterMethodCd,
            deviceModelCd = deviceModelCd,
            meterDeviceNm = meterDeviceNm,
            meterDeviceSn = meterDeviceSn,
            installGroupCd = installGroupCd,
            companyCd = companyCd,
            installCompanyNm = installCompanyNm,
            nbServiceCode = nbServiceCode,
            nbCseId = nbCseId,
            nbIccId = nbIccId,
            uploadResultCd = uploadResultCd,
            uploadErrorCd = uploadErrorCd,
            barcode = barcode,
            cameraSave = cameraSave,
            setDt = setDt,
            AreaBig = AreaBig,
            AreaBigCd = AreaBigCd,
            AreaMid = AreaMid,
            AreaMidCd = AreaMidCd,
            AreaSmall = AreaSmall,
            AreaSmallCd = AreaSmallCd,
            setAreaAddr = setAreaAddr,
            setPlaceDesc = setPlaceDesc,
            accountCheckNote = accountCheckNote,
            deviceMemo = deviceMemo,
            cdmaNo = cdmaNo,
            serverAddr1 = serverAddr1,
            serverPort1 = serverPort1,
            pan = pan,
            panNm = panNm,
            pnwk = pnwk,
            nwk = nwk,
            mac = mac,
            gpsLatitude = gpsLatitude,
            gpsLongitude = gpsLongitude,
            meterBaseTime = meterBaseTime,
            meterIntervalTime = meterIntervalTime,
            reportIntervalTime = reportIntervalTime,
            reportRangeTime = reportRangeTime,
            dataSkipFlag = dataSkipFlag,
            meterStoreMonth = meterStoreMonth,
            meterBaseDay = meterBaseDay,
            meterAlertTime = meterAlertTime,
            meterPeriodTime = meterPeriodTime,
            activeStartDay = activeStartDay,
            activeEndDay = activeEndDay,
            activeStartHour = activeStartHour,
            activeEndHour = activeEndHour,
            terminalType = terminalType,
            firmware = firmware,
            subUpdateInterval = subUpdateInterval,
            subNwkID = subNwkID,
            terminalTypeCd = terminalTypeCd,
            utilityCode = utilityCode,
            waterCompCode = waterCompCode,
            wmuManufacturerCode = wmuManufacturerCode,
            wmuInstallCode = wmuInstallCode,
            cdmaTypeCd = cdmaTypeCd,
            firmwareGateway = firmwareGateway,
            serverConnectionCode = serverConnectionCode,
            concenIP = concenIP,
            concenGwIP = concenGwIP,
            serverURL = serverURL,
            rfChn = rfChn,
            hcuId = hcuId,
            setInitDate = setInitDate,
            masterSn = masterSn,
            subSn1 = subSn1,
            subSn2 = subSn2,
            subSn3 = subSn3,
            subSn4 = subSn4,
            accountMeterUse1 = accountMeterUse1,
            accountMeterUse2 = accountMeterUse2,
            accountMeterUse3 = accountMeterUse3,
            meterCount = meterCount,
            meterCd1 = meterCd1,
            meterPort1 = meterPort1,
            meterTypeCd1 = meterTypeCd1,
            meterCompany1 = meterCompany1,
            meterSn1 = meterSn1,
            meterCurrVal1 = meterCurrVal1,
            meterCaliber1 = meterCaliber1,
            metercaliberCd1 = metercaliberCd1,
            meterDigits1 = meterDigits1,
            meterCd2 = meterCd2,
            meterPort2 = meterPort2,
            meterTypeCd2 = meterTypeCd2,
            meterCompany2 = meterCompany2,
            meterSn2 = meterSn2,
            meterCurrVal2 = meterCurrVal2,
            meterCaliber2 = meterCaliber2,
            metercaliberCd2 = metercaliberCd2,
            meterDigits2 = meterDigits2,
            meterCd3 = meterCd3,
            meterPort3 = meterPort3,
            meterTypeCd3 = meterTypeCd3,
            meterCompany3 = meterCompany3,
            meterSn3 = meterSn3,
            meterCurrVal3 = meterCurrVal3,
            meterCaliber3 = meterCaliber3,
            metercaliberCd3 = metercaliberCd3,
            meterDigits3 = meterDigits3,
        ).toBody()

        val response = hitecService.postUploadInstallDevice(
            userId = userId,
            password = password,
            mobileId = mobileId,
            bluetoothId = bluetoothId,
            localSite = localSite,
            data = param
        )

        response.toDomainModel()
    }
}