package com.hitec.data.model.entity

import androidx.room.Entity
import com.hitec.domain.model.AsDevice

@Entity(tableName = "T_AsDevice", primaryKeys = ["meterDeviceId"])
data class AsDeviceEntity(
    val modTypeCd: String? = null,
    val reportNo: String? = null,
    val receiptDt: String? = null,
    val receiptUserId: String? = null,
    val uploadResultCd: String? = null,
    val uploadErrorCd: String? = null,
    val receiptType: String? = null,
    val receiptMemo: String? = null,
    val siteId: String? = null,
    val consumeHouseNo: String? = null,
    val consumeHouseNm: String? = null,
    val firstSetDt: String? = null,
    val meterMethodCd: String? = null,
    val deviceTypeCd: String? = null,
    val communicationTypeCd: String? = null,
    val telecomTypeCd: String? = null,
    val nbServiceCode: String? = null,
    val nbCseId: String? = null,
    val nbIccId: String? = null,
    val productYear: String? = null,
    val deviceModelCd: String? = null,
    val caliberCd: String? = null,
    val fieldActionMain: String? = null,
    val fieldActionMainEdit: String? = null,
    val fieldActionSub: String? = null,
    val fieldActionSubEdit: String? = null,
    val fieldActionMemo: String? = null,
    val analysisType: String? = null,
    val analysisTypeDetail: String? = null,
    val statusSet: String? = null,
    val perNext: String? = null,
    val meterDeviceId: String,
    val deviceSn: String? = null,
    val pan: String? = null,
    val nwk: String? = null,
    val firmware: String? = null,
    val cdmaTypeCd: String? = null,
    val firmwareGateway: String? = null,
    val terminalTypeCd: String? = null,
    val meterTypeCd: String? = null,
    val areaBig: String? = null,
    val areaBigCd: String? = null,
    val areaMid: String? = null,
    val areaMidCd: String? = null,
    val areaSmall: String? = null,
    val areaSmallCd: String? = null,
    val setAreaAddr: String? = null,
    val setPlaceDesc: String? = null,
    val gpsLatitude: String? = null,
    val gpsLongitude: String? = null,
    val connectDtm: String? = null,
    val lastVal: String? = null,
    val deviceBattery: String? = null,
    val stateDisplay: String? = null,
    val cdmaNo: String? = null,
)

fun AsDeviceEntity.toDomainModel(): AsDevice = AsDevice(
    modTypeCd = modTypeCd,
    reportNo = reportNo,
    receiptDt = receiptDt,
    receiptUserId = receiptUserId,
    uploadResultCd = uploadResultCd,
    uploadErrorCd = uploadErrorCd,
    receiptType = receiptType,
    receiptMemo = receiptMemo,
    siteId = siteId,
    consumeHouseNo = consumeHouseNo,
    consumeHouseNm = consumeHouseNm,
    firstSetDt = firstSetDt,
    meterMethodCd = meterMethodCd,
    deviceTypeCd = deviceTypeCd,
    communicationTypeCd = communicationTypeCd,
    telecomTypeCd = telecomTypeCd,
    nbServiceCode = nbServiceCode,
    nbCseId = nbCseId,
    nbIccId = nbIccId,
    productYear = productYear,
    deviceModelCd = deviceModelCd,
    caliberCd = caliberCd,
    fieldActionMain = fieldActionMain,
    fieldActionMainEdit = fieldActionMainEdit,
    fieldActionSub = fieldActionSub,
    fieldActionSubEdit = fieldActionSubEdit,
    fieldActionMemo = fieldActionMemo,
    analysisType = analysisType,
    analysisTypeDetail = analysisTypeDetail,
    statusSet = statusSet,
    perNext = perNext,
    meterDeviceId = meterDeviceId,
    deviceSn = deviceSn,
    pan = pan,
    nwk = nwk,
    firmware = firmware,
    cdmaTypeCd = cdmaTypeCd,
    firmwareGateway = firmwareGateway,
    terminalTypeCd = terminalTypeCd,
    meterTypeCd = meterTypeCd,
    areaBig = areaBig,
    areaBigCd = areaBigCd,
    areaMid = areaMid,
    areaMidCd = areaMidCd,
    areaSmall = areaSmall,
    areaSmallCd = areaSmallCd,
    setAreaAddr = setAreaAddr,
    setPlaceDesc = setPlaceDesc,
    gpsLatitude = gpsLatitude,
    gpsLongitude = gpsLongitude,
    connectDtm = connectDtm,
    lastVal = lastVal,
    deviceBattery = deviceBattery,
    stateDisplay = stateDisplay,
    cdmaNo = cdmaNo,
)

fun AsDevice.toEntity(): AsDeviceEntity = AsDeviceEntity(
    modTypeCd = modTypeCd,
    reportNo = reportNo,
    receiptDt = receiptDt,
    receiptUserId = receiptUserId,
    uploadResultCd = uploadResultCd,
    uploadErrorCd = uploadErrorCd,
    receiptType = receiptType,
    receiptMemo = receiptMemo,
    siteId = siteId,
    consumeHouseNo = consumeHouseNo,
    consumeHouseNm = consumeHouseNm,
    firstSetDt = firstSetDt,
    meterMethodCd = meterMethodCd,
    deviceTypeCd = deviceTypeCd,
    communicationTypeCd = communicationTypeCd,
    telecomTypeCd = telecomTypeCd,
    nbServiceCode = nbServiceCode,
    nbCseId = nbCseId,
    nbIccId = nbIccId,
    productYear = productYear,
    deviceModelCd = deviceModelCd,
    caliberCd = caliberCd,
    fieldActionMain = fieldActionMain,
    fieldActionMainEdit = fieldActionMainEdit,
    fieldActionSub = fieldActionSub,
    fieldActionSubEdit = fieldActionSubEdit,
    fieldActionMemo = fieldActionMemo,
    analysisType = analysisType,
    analysisTypeDetail = analysisTypeDetail,
    statusSet = statusSet,
    perNext = perNext,
    meterDeviceId = meterDeviceId,
    deviceSn = deviceSn,
    pan = pan,
    nwk = nwk,
    firmware = firmware,
    cdmaTypeCd = cdmaTypeCd,
    firmwareGateway = firmwareGateway,
    terminalTypeCd = terminalTypeCd,
    meterTypeCd = meterTypeCd,
    areaBig = areaBig,
    areaBigCd = areaBigCd,
    areaMid = areaMid,
    areaMidCd = areaMidCd,
    areaSmall = areaSmall,
    areaSmallCd = areaSmallCd,
    setAreaAddr = setAreaAddr,
    setPlaceDesc = setPlaceDesc,
    gpsLatitude = gpsLatitude,
    gpsLongitude = gpsLongitude,
    connectDtm = connectDtm,
    lastVal = lastVal,
    deviceBattery = deviceBattery,
    stateDisplay = stateDisplay,
    cdmaNo = cdmaNo,
)